Parameters:

  DataBucketName:
    Type: String
    Description: name for s3 bucket
  
  LambdaBucketName:
    Type: String
    Description: bucket where lamabda deployment packages are stored

  DeploymentPackageKey:
    Type: String
    Description: s3 key for deployment package 

Resources:

  S3Data:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Ref DataBucketName

  MyLambdaFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket: !Ref LambdaBucketName
        S3Key: apps/aws-bom/empty.zip
      Description: kotlin lambda example
      FunctionName: MyLambdaFunction
      Handler: com.gsat.mylambdafunction.Handler::handler
      MemorySize: 1536
      Role:
        !GetAtt LambdaRole.Arn
      Runtime: java8
      Timeout: 60
      Environment:
        Variables:
          dataBucket: !Ref S3Data

  LambdaRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: "inline-policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
              -
                Effect: "Allow"
                Action:
                  - s3:*
                Resource:
                  - !Sub arn:aws:s3:::${S3Data}
                  - !Sub arn:aws:s3:::${S3Data}/*
